{"ast":null,"code":"var _jsxFileName = \"/var/www/blog/client/src/pages/Updateand Delete.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BlogCard from \"../components/BlogCard\";\nimport { Grid, Card } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Blogs = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const getAllBlogs = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(\"http://localhost:8000/api/v1/blog/all-blog\");\n      if (data !== null && data !== void 0 && data.success) {\n        setBlogs(data.blogs);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  // const url = blogs.image\n  //   ? blogs.image\n  //   : \"https://images.unsplash.com/photo-1498050108023-c5249f4df085?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=752&q=80 \";\n\n  useEffect(() => {\n    getAllBlogs();\n  }, []);\n  console.log(blogs, \"blogggggg\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        spacing: 2,\n        children: blogs && blogs.length > 0 ? blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              fontSize: \"20px\"\n            },\n            children: blog.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            height: \"350px\",\n            width: \"100%\",\n            src: `http://localhost:8000/${blog.image}`,\n            alt: \"blog image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: blog.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)\n\n        // title={blog.title}\n        // description={blog.description}\n        // image={blog.image}\n        // username={blog.username}\n        // time={blog.createdAt}\n        // _id={blog._id}\n        // categories={blog.categories}\n        ) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"50px\",\n            marginLeft: \"20px\"\n          },\n          children: \"NO data available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Blogs, \"RDzdeLKEs49XKHWpCIuOQAADm3U=\");\n_c = Blogs;\nexport default Blogs;\nvar _c;\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"names":["React","useState","useEffect","axios","BlogCard","Grid","Card","jsxDEV","_jsxDEV","Blogs","_s","blogs","setBlogs","getAllBlogs","data","get","success","err","console","log","children","item","container","spacing","length","map","blog","style","fontSize","title","fileName","_jsxFileName","lineNumber","columnNumber","height","width","src","image","alt","description","marginTop","marginLeft","_c","$RefreshReg$"],"sources":["/var/www/blog/client/src/pages/Updateand Delete.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BlogCard from \"../components/BlogCard\";\nimport { Grid, Card } from \"@mui/material\";\n\nconst Blogs = () => {\n  const [blogs, setBlogs] = useState([]);\n\n  const getAllBlogs = async () => {\n    try {\n      const { data } = await axios.get(\n        \"http://localhost:8000/api/v1/blog/all-blog\"\n      );\n      if (data?.success) {\n        setBlogs(data.blogs);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  // const url = blogs.image\n  //   ? blogs.image\n  //   : \"https://images.unsplash.com/photo-1498050108023-c5249f4df085?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=752&q=80 \";\n\n  useEffect(() => {\n    getAllBlogs();\n  }, []);\n  console.log(blogs, \"blogggggg\");\n  return (\n    <div>\n      <Grid item container>\n        <Grid item container spacing={2}>\n          {blogs && blogs.length > 0 ? (\n            blogs.map((blog) => (\n              <div>\n                <h1 style={{ fontSize: \"20px\" }}>{blog.title}</h1>\n                <img\n                  height=\"350px\"\n                  width=\"100%\"\n                  src={`http://localhost:8000/${blog.image}`}\n                  alt=\"blog image\"\n                />\n                <h1>{blog.description}</h1>\n              </div>\n\n              // title={blog.title}\n              // description={blog.description}\n              // image={blog.image}\n              // username={blog.username}\n              // time={blog.createdAt}\n              // _id={blog._id}\n              // categories={blog.categories}\n            ))\n          ) : (\n            <div style={{ marginTop: \"50px\", marginLeft: \"20px\" }}>\n              NO data available\n            </div>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Blogs;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,IAAI,EAAEC,IAAI,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMX,KAAK,CAACY,GAAG,CAC9B,4CAA4C,CAC7C;MACD,IAAID,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEE,OAAO,EAAE;QACjBJ,QAAQ,CAACE,IAAI,CAACH,KAAK,CAAC;MACtB;IACF,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EACD;EACA;EACA;;EAEAf,SAAS,CAAC,MAAM;IACdW,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EACNK,OAAO,CAACC,GAAG,CAACR,KAAK,EAAE,WAAW,CAAC;EAC/B,oBACEH,OAAA;IAAAY,QAAA,eACEZ,OAAA,CAACH,IAAI;MAACgB,IAAI;MAACC,SAAS;MAAAF,QAAA,eAClBZ,OAAA,CAACH,IAAI;QAACgB,IAAI;QAACC,SAAS;QAACC,OAAO,EAAE,CAAE;QAAAH,QAAA,EAC7BT,KAAK,IAAIA,KAAK,CAACa,MAAM,GAAG,CAAC,GACxBb,KAAK,CAACc,GAAG,CAAEC,IAAI,iBACblB,OAAA;UAAAY,QAAA,gBACEZ,OAAA;YAAImB,KAAK,EAAE;cAAEC,QAAQ,EAAE;YAAO,CAAE;YAAAR,QAAA,EAAEM,IAAI,CAACG;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eAClDzB,OAAA;YACE0B,MAAM,EAAC,OAAO;YACdC,KAAK,EAAC,MAAM;YACZC,GAAG,EAAG,yBAAwBV,IAAI,CAACW,KAAM,EAAE;YAC3CC,GAAG,EAAC;UAAY;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAChB,eACFzB,OAAA;YAAAY,QAAA,EAAKM,IAAI,CAACa;UAAW;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;;QAG7B;QACA;QACA;QACA;QACA;QACA;QACA;QACD,CAAC,gBAEFzB,OAAA;UAAKmB,KAAK,EAAE;YAAEa,SAAS,EAAE,MAAM;YAAEC,UAAU,EAAE;UAAO,CAAE;UAAArB,QAAA,EAAC;QAEvD;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV,CAAC;AAACvB,EAAA,CAzDID,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AA2DX,eAAeA,KAAK;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}