{"ast":null,"code":"var _jsxFileName = \"/var/www/blog/client/src/pages/UserBlog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BlogCard from \"../components/BlogCard\";\nimport { Helmet } from \"react-helmet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserBlog = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n\n  //get user blogs\n  const getuserBlogs = async () => {\n    try {\n      const id = localStorage.getItem(\"userId\");\n      const {\n        data\n      } = await axios.get(`http://localhost:8000/api/v1/blog/user-blog/${id}`);\n      if (data !== null && data !== void 0 && data.success) {\n        setBlogs(data === null || data === void 0 ? void 0 : data.userBlog.blog);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  console.log(blogs, \"userrr blog\");\n  useEffect(() => {\n    getuserBlogs();\n  }, []);\n  console.log(blogs);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"keywords\",\n        content: \"create Post for tech and other category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), blogs && blogs.map(blog => /*#__PURE__*/_jsxDEV(BlogCard, {\n      _id: blog._id,\n      isUser: true,\n      title: blog.title,\n      description: blog.description,\n      image: blog.image,\n      username: blog.username,\n      time: blog.createdAt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(UserBlog, \"RDzdeLKEs49XKHWpCIuOQAADm3U=\");\n_c = UserBlog;\nexport default UserBlog;\nvar _c;\n$RefreshReg$(_c, \"UserBlog\");","map":{"version":3,"names":["React","useState","useEffect","axios","BlogCard","Helmet","jsxDEV","_jsxDEV","UserBlog","_s","blogs","setBlogs","getuserBlogs","id","localStorage","getItem","data","get","success","userBlog","blog","err","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","name","content","map","_id","isUser","title","description","image","username","time","createdAt","_c","$RefreshReg$"],"sources":["/var/www/blog/client/src/pages/UserBlog.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport BlogCard from \"../components/BlogCard\";\nimport { Helmet } from \"react-helmet\";\n\nconst UserBlog = () => {\n  const [blogs, setBlogs] = useState([]);\n\n  //get user blogs\n  const getuserBlogs = async () => {\n    try {\n      const id = localStorage.getItem(\"userId\");\n      const { data } = await axios.get(\n        `http://localhost:8000/api/v1/blog/user-blog/${id}`\n      );\n      if (data?.success) {\n        setBlogs(data?.userBlog.blog);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  console.log(blogs, \"userrr blog\");\n  useEffect(() => {\n    getuserBlogs();\n  }, []);\n  console.log(blogs);\n  return (\n    <div>\n      <Helmet>\n        <title>Blogs</title>\n        <meta\n          name=\"keywords\"\n          content=\"create Post for tech and other category\"\n        />\n      </Helmet>\n      {blogs &&\n        blogs.map((blog) => (\n          <BlogCard\n            _id={blog._id}\n            isUser={true}\n            title={blog.title}\n            description={blog.description}\n            image={blog.image}\n            username={blog.username}\n            time={blog.createdAt}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default UserBlog;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,MAAM,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,EAAE,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MACzC,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMb,KAAK,CAACc,GAAG,CAC7B,+CAA8CJ,EAAG,EAAC,CACpD;MACD,IAAIG,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEE,OAAO,EAAE;QACjBP,QAAQ,CAACK,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,QAAQ,CAACC,IAAI,CAAC;MAC/B;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EACDC,OAAO,CAACC,GAAG,CAACb,KAAK,EAAE,aAAa,CAAC;EACjCR,SAAS,CAAC,MAAM;IACdU,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EACNU,OAAO,CAACC,GAAG,CAACb,KAAK,CAAC;EAClB,oBACEH,OAAA;IAAAiB,QAAA,gBACEjB,OAAA,CAACF,MAAM;MAAAmB,QAAA,gBACLjB,OAAA;QAAAiB,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACpBrB,OAAA;QACEsB,IAAI,EAAC,UAAU;QACfC,OAAO,EAAC;MAAyC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACK,EACRlB,KAAK,IACJA,KAAK,CAACqB,GAAG,CAAEX,IAAI,iBACbb,OAAA,CAACH,QAAQ;MACP4B,GAAG,EAAEZ,IAAI,CAACY,GAAI;MACdC,MAAM,EAAE,IAAK;MACbC,KAAK,EAAEd,IAAI,CAACc,KAAM;MAClBC,WAAW,EAAEf,IAAI,CAACe,WAAY;MAC9BC,KAAK,EAAEhB,IAAI,CAACgB,KAAM;MAClBC,QAAQ,EAAEjB,IAAI,CAACiB,QAAS;MACxBC,IAAI,EAAElB,IAAI,CAACmB;IAAU;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAExB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEV,CAAC;AAACnB,EAAA,CA7CID,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AA+Cd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}